class Solution {
public:
    int pivot(vector<int> &arr)
    {
        int s = 0, e = arr.size()-1;
        int mid = s+(e-s)/2;

        while(s<e)
        {
            if(arr[mid]>=arr[0])
                s = mid+1;
            else
                e = mid;
            
            mid = s+(e-s)/2;
        }
        return s;
    }
    int search(vector<int>& arr, int target) {
        int n = arr.size();
        if(n == 0)
            return -1;
        if(n == 1 && arr[0] == target)
            return 0;
        if(n == 1 && arr[0] != target)
            return -1;
        
        int s = 0, e = n-1;
        int mid = s+(e-s)/2;
        int p = pivot(arr);
        
        if(target == arr[p])
            return p;
        if(target == arr[0])
            return 0;
        if(target > arr[0])
            e = p-1;
        if(target < arr[0])
            s = p;

        mid = s+(e-s)/2;
        while(s <= e)
        {
            if(arr[mid] == target)
                return mid;
            else if(arr[mid] > target)
                e = mid-1;
            else
                s = mid+1;
             mid = s+(e-s)/2;
        }
        return -1;
    }
};
