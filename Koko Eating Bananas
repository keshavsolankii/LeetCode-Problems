class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int s=1, ans=0;
        int e = *max_element(piles.begin(), piles.end());

        int mid = s + (e-s)/2;
        while(e >= s)
        {
            long int minSpeed = TimeFunc(mid, piles);

            if(minSpeed <= h)
            {
                ans = mid;
                e = mid-1;
            }
            else
            {
                s = mid+1;
            }
            mid = s + (e-s)/2;
        } 
        return ans;
    }
    long int TimeFunc(int mid, vector<int> &piles)
    {
        long int sum=0;

        for(int i=0; i<piles.size(); i++)
        {
            sum += (piles[i]/mid) + (piles[i]%mid != 0);
        }
        return sum;
    }
};
